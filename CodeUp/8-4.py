'''
2 * n 타일링
: -- ㅁ 모양 타일을 가지고 2 * n 타일을 채우는 경우의 수를 찾아라

: 모양 타일만 덧붙일 수 있는 경우와
-- ㅁ 모양 타일을 조합할 수 있는 경우로 나눠서 해결
'''

n = int(input())
dp = [0] * (n + 1)

dp[1] = 1
dp[2] = 3
for i in range(3, n + 1):
    dp[i] = (dp[i - 1] + dp[i - 2] * 2) % 796796

print(dp)
print(dp[n])
